// Generated by CoffeeScript 1.6.3
(function() {
  var MojoModule, MojoModules, model, mojo, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  model = require("mojo-model");

  mojo = require("mojojs");

  MojoModule = (function(_super) {
    __extends(MojoModule, _super);

    function MojoModule() {
      _ref = MojoModule.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    MojoModule.prototype.map = function(item) {
      var _ref1;
      item._id = item.name;
      item.author = item.author || ((_ref1 = item.maintainers) != null ? _ref1[0] : void 0);
      item.watchers = item.watchers || 0;
      item.forks = item.forks || 0;
      return item;
    };

    return MojoModule;

  })(model.Model);

  MojoModules = (function(_super) {
    __extends(MojoModules, _super);

    /*
    */


    function MojoModules(options) {
      this.createModel = __bind(this.createModel, this);
      MojoModules.__super__.constructor.call(this);
      this.set({
        page: 0,
        count: 50
      });
    }

    /*
    */


    MojoModules.prototype.createModel = function(data) {
      return new MojoModule(data);
    };

    /*
    */


    MojoModules.prototype.search = function(keyword, next) {
      this.set("keyword", keyword);
      this._reset = true;
      return this.reload(next);
    };

    /*
    */


    MojoModules.prototype.loadMore = function(next) {
      if (next == null) {
        next = function() {};
      }
      this.set("page", this.get("page") + 1);
      return this.reload(next);
    };

    /*
    */


    MojoModules.prototype._load = function(next) {
      var _this = this;
      this.set("pageLength", void 0);
      return mojo.mediator.execute("findNpmModules", {
        page: this.get("page"),
        count: this.get("count"),
        keyword: this.get("keyword")
      }, function(err, items) {
        if (err != null) {
          return next(err);
        }
        if (_this._reset) {
          _this._reset = false;
          _this.reset(items);
        } else {
          _this.push.apply(_this, items.map(_this.createModel));
        }
        _this.set("pageLength", items.length);
        return next();
      });
    };

    return MojoModules;

  })(model.Collection);

  module.exports = MojoModules;

}).call(this);
